{"version":3,"sources":["components/HeaderFavicon.svg","images/instagram.svg","images/linkedin.svg","images/github.svg","images/green-2.png","images/blue-2.png","images/red-2.png","images/PortfolioToronto.jpg","components/HeaderComponent.js","components/HomepageComponent.js","components/UnderConstruction.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","HeaderComponent","react_default","a","createElement","className","react_router_dom","to","src","favicon","alt","Component","HompageComponent","Fragment","HeaderComponent_HeaderComponent","href","require","UnderConstructionComponent","Boolean","window","location","hostname","match","ReactDOM","render","react_router","path","exact","component","Homepage","UnderConstruction","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.75d94472.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/HeaderFavicon.a8e6b012.svg\";","module.exports = __webpack_public_path__ + \"static/media/instagram.4ef82e3b.svg\";","module.exports = __webpack_public_path__ + \"static/media/linkedin.45585c89.svg\";","module.exports = __webpack_public_path__ + \"static/media/github.cf0b2304.svg\";","module.exports = __webpack_public_path__ + \"static/media/green-2.8213fb5e.png\";","module.exports = __webpack_public_path__ + \"static/media/blue-2.caaabc17.png\";","module.exports = __webpack_public_path__ + \"static/media/red-2.6120ef0a.png\";","module.exports = __webpack_public_path__ + \"static/media/PortfolioToronto.210a3a63.jpg\";","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport favicon from './HeaderFavicon.svg';\nimport '../css/Global.css';\nimport '../css/HeaderComponent.css';\n\nexport default class HeaderComponent extends Component {\n  render() {\n    return (\n      <header className=\"header\">\n        <div className=\"left-links\">\n          {/* <a>Résumé</a>\n          <a href='https://society6.com/linarts'>Shop</a> */}\n        </div>\n        <Link to=\"/\">\n          <img className=\"favicon\" src={favicon} alt=\"Favicon\" />\n        </Link>\n      </header>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport Header from './HeaderComponent';\nimport '../css/HomepageComponent.css';\n\nexport default class HompageComponent extends Component {\n  render() {\n    return (\n      <>\n        <Header />\n        <div className=\"block\">\n          <h1>CAROLINA LI</h1>\n          <p className=\"intro\">\n          Hi! I code and create designs. I strive for simplicity and elegance in both.\n            <br /> Take a look at my projects below.\n          </p>\n          <div className=\"social-media block\">\n            <a href=\"https://www.instagram.com/caro.linarts/\">\n              <img src={require('../images/instagram.svg')} alt=\"instagram\" />\n            </a>\n            <a href=\"https://www.linkedin.com/in/carolinaaokeli/\">\n              <img src={require('../images/linkedin.svg')} alt=\"linkedin\" />\n            </a>\n            <a href=\"https://github.com/CarolinaLi/\">\n              <img src={require('../images/github.svg')} alt=\"github\" />\n            </a>\n          </div>\n        </div>\n        <div className=\"container-fluid block projects\">\n          <div className=\"row no-gutters\">          \n            <div className=\"col-sm-4 project\">\n              <a href=\"https://github.com/CarolinaLi/\">\n                <img src={require('../images/green-2.png')} alt=\"dev\" />\n              </a>\n            </div>\n            <div className=\"col-sm-4 project\">\n              <Link to=\"/ux\">\n                <img src={require('../images/blue-2.png')} alt=\"ux\" />\n              </Link>\n            </div>\n            <div className=\"col-sm-4 project\">\n              <a href=\"https://society6.com/linarts/collection/gallery\">\n                <img src={require('../images/red-2.png')} alt=\"art\" />\n              </a>\n            </div>\n          </div>\n        </div>\n        <div className=\"block\">\n          <p className=\"paragraph\">\n          I work mainly in frontend development because I love the visual\n          aspect. I’m currently exploring user experience design. My goal is to\n          create delightful experiences for people while solving meaningful\n          problems.\n          </p>\n        </div>\n        <div className=\"block\">\n          <img\n            className=\"big-picture\"\n            src={require('../images/PortfolioToronto.jpg')}\n          />\n        </div>\n        <div className=\"container block\">\n          <h2>Skills</h2>\n          <div className=\"row mt-5\">\n            <div className=\"col-sm-4\">\n              <p>\n              Typescript\n                <br />\n              Javascript\n                <br />\n              C++\n                <br />C<br />\n              C#\n                <br />\n              HTML\n                <br />\n              CSS\n              </p>\n            </div>\n            <div className=\"col-sm-4\">\n              <p>\n              React\n                <br />\n              Redux\n                <br />\n              Saga\n                <br />\n              Bootstrap\n                <br />\n              Powershell\n                <br />\n              Racket\n                <br />\n              Agile\n              </p>\n            </div>\n            <div className=\"col-sm-4\">\n              <p>\n              Wireframing\n                <br />\n              Prototyping\n                <br />\n              Sketch\n                <br />\n                <br />\n              Watercolour\n                <br />\n              Digital Painting\n                <br />\n              Photoshop\n              </p>\n            </div>\n          </div>\n        </div>\n        <div className=\"container-fluid footer\">\n          <h2>Let’s talk</h2>\n          <p>ca2li@edu.uwaterloo.ca</p>\n        </div>\n      </>\n    );\n  }\n}","import React, { Component } from 'react';\nimport Header from '../components/HeaderComponent';\nimport '../css/Global.css';\n\nexport default class UnderConstructionComponent extends Component {\n  render() {  \n    return (\n      <>\n        <Header />\n        <h1 className=\"block\">Working on this page right now!</h1>\n      </>\n    );\n  }\n}\n","/* eslint-disable */\n\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport './index.css';\nimport Homepage from './components/HomepageComponent';\nimport UnderConstruction from './components/UnderConstruction';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Router>\n    <Switch>\n      <Route path = \"/\" exact component = {Homepage} />\n      <Route path = \"/ux\" component = {UnderConstruction} />\n    </Switch>\n  </Router>, document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}